// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Renders App 1`] = `
<div>
  <Header
    brandInfo={
      Object {
        "appName": "Telstra Purple Outlook Signature",
        "brandLink": "https://readify-signatures.azurewebsites.net/",
      }
    }
  />
  <section
    className="section"
  >
    <div
      className="container"
    >
      <Info />
      <Form />
    </div>
  </section>
</div>
`;

exports[`Renders Purple Signature 1`] = `
<App>
  <div>
    <Header
      brandInfo={
        Object {
          "appName": "Telstra Purple Outlook Signature",
          "brandLink": "https://readify-signatures.azurewebsites.net/",
        }
      }
    >
      <nav
        aria-label="main navigation"
        className="navbar"
        role="navigation"
      >
        <div
          className="section"
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <div
            className="container"
          >
            <div
              className="navbar-brand"
            >
              <a
                className="navbar-item"
                href="https://readify-signatures.azurewebsites.net/"
              >
                Telstra Purple Outlook Signature
              </a>
            </div>
          </div>
          <div
            className="column"
          />
        </div>
      </nav>
    </Header>
    <section
      className="section"
    >
      <div
        className="container"
      >
        <Info>
          <div
            className="content"
          >
            <h3
              className="title"
            >
              Create your signature
            </h3>
            <ol>
              <li>
                Enter your details.
              </li>
              <li>
                Click the "Copy Signature" button
              </li>
              <li>
                Open outlook
              </li>
              <li>
                <a
                  href="https://support.office.com/en-us/article/create-and-add-a-signature-to-messages-8ee5d4f4-68fd-464a-a1c1-0e1c80bb27f2"
                  rel="noopener noreferrer"
                  style={
                    Object {
                      "fontWeight": "bold",
                      "textDecoration": "underline",
                    }
                  }
                  target="_blank"
                >
                  Paste selection into signature editor
                </a>
                <ul
                  style={
                    Object {
                      "listStyleType": "none",
                      "margin": "0",
                      "paddingLeft": "1rem",
                      "paddingTop": "0.5rem",
                    }
                  }
                >
                  <li
                    style={
                      Object {
                        "marginBottom": "0.5rem",
                      }
                    }
                  >
                    <span
                      style={
                        Object {
                          "fontWeight": "bold",
                        }
                      }
                    >
                      Windows: 
                    </span>
                    File &gt; Options &gt; Mail &gt; Signatures
                  </li>
                  <li>
                    <span
                      style={
                        Object {
                          "fontWeight": "bold",
                        }
                      }
                    >
                      Mac: 
                    </span>
                    Outlook &gt; Preferences &gt; Signatures
                  </li>
                  <li>
                    <span
                      style={
                        Object {
                          "fontWeight": "bold",
                        }
                      }
                    >
                      Outlook web access (OWA): 
                    </span>
                    Cog (top-right) &gt; Options &gt; Mail &gt; Layout &gt; Email signature
                  </li>
                </ul>
              </li>
            </ol>
            <br />
          </div>
        </Info>
        <Form>
          <form>
            <div
              className="field is-horizontal"
              key="signatureTypes"
            >
              <div
                className="field-label is-normal"
              >
                <label
                  className="label field-label"
                >
                  Signature Type
                </label>
              </div>
              <div
                className="field-body"
              >
                <div
                  className="control"
                  key="signatureTypes"
                >
                  <div
                    className="field is-narrow"
                  >
                    <div
                      className="control"
                    >
                      <label
                        className="radio"
                        key="0"
                      >
                        <input
                          checked={true}
                          className="radioInput"
                          id="telstraPurple"
                          name="signatureTypeOpt"
                          onChange={[Function]}
                          type="radio"
                        />
                        Telstra Purple
                      </label>
                      <label
                        className="radio"
                        key="1"
                      >
                        <input
                          checked={false}
                          className="radioInput"
                          id="managedServices"
                          name="signatureTypeOpt"
                          onChange={[Function]}
                          type="radio"
                        />
                        Managed Services
                      </label>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              className="field is-horizontal"
              key="name"
            >
              <div
                className="field-label is-normal"
              >
                <label
                  className="label field-label"
                >
                  Your Name:
                </label>
              </div>
              <div
                className="field-body"
              >
                <div
                  className="control"
                  key="name"
                >
                  <input
                    className="input"
                    onChange={[Function]}
                    placeholder="Your Name"
                    style={
                      Object {
                        "width": "300px",
                      }
                    }
                    value=""
                  />
                </div>
              </div>
            </div>
            <div
              className="field is-horizontal"
              key="title"
            >
              <div
                className="field-label is-normal"
              >
                <label
                  className="label field-label"
                >
                  Job Title:
                </label>
              </div>
              <div
                className="field-body"
              >
                <div
                  className="control"
                  key="title"
                >
                  <input
                    className="input"
                    onChange={[Function]}
                    placeholder="Job Title"
                    style={
                      Object {
                        "width": "300px",
                      }
                    }
                    value=""
                  />
                </div>
              </div>
            </div>
            <div
              className="field is-horizontal"
              key="qualifications"
            >
              <div
                className="field-label is-normal"
              >
                <label
                  className="label field-label"
                >
                  Qualifications: (Optional)
                </label>
              </div>
              <div
                className="field-body"
              >
                <div
                  className="control"
                  key="qualifications"
                >
                  <input
                    className="input"
                    onChange={[Function]}
                    placeholder="Jedi Master | PSM I"
                    style={
                      Object {
                        "width": "300px",
                      }
                    }
                    value=""
                  />
                </div>
              </div>
            </div>
            <div
              className="field is-horizontal"
              key="mobile"
            >
              <div
                className="field-label is-normal"
              >
                <label
                  className="label field-label"
                >
                  Mobile:
                </label>
              </div>
              <div
                className="field-body"
              >
                <div
                  className="control"
                  key="mobile"
                >
                  <input
                    className="input"
                    onChange={[Function]}
                    placeholder="+61 111 222 333"
                    style={
                      Object {
                        "width": "300px",
                      }
                    }
                    value=""
                  />
                </div>
              </div>
            </div>
            <div
              className="field is-horizontal"
              key="email"
            >
              <div
                className="field-label is-normal"
              >
                <label
                  className="label field-label"
                >
                  Email:
                </label>
              </div>
              <div
                className="field-body"
              >
                <div
                  className="control"
                  key="email"
                >
                  <input
                    className="input"
                    onChange={[Function]}
                    placeholder="your.name@purple.telstra.com"
                    style={
                      Object {
                        "width": "300px",
                      }
                    }
                    value=""
                  />
                </div>
              </div>
            </div>
            <div
              className="field is-horizontal"
              key="twitter"
            >
              <div
                className="field-label is-normal"
              >
                <label
                  className="label field-label"
                >
                  Twitter: (Optional)
                </label>
              </div>
              <div
                className="field-body"
              >
                <div
                  className="control"
                  key="twitter"
                >
                  <input
                    className="input"
                    onChange={[Function]}
                    placeholder="@myTwitter"
                    style={
                      Object {
                        "width": "300px",
                      }
                    }
                    value=""
                  />
                </div>
              </div>
            </div>
            <hr />
            <withProps(mapProps(SignatureContainer))
              email=""
              mobile=""
              name=""
              placeholders={
                Object {
                  "email": "your.name@purple.telstra.com",
                  "mobile": "+61 111 222 333",
                  "name": "Your Name",
                  "qualifications": "Jedi Master | PSM I",
                  "title": "Job Title",
                  "twitter": "@myTwitter",
                }
              }
              qualifications=""
              sigType={false}
              signatureTypes={
                Array [
                  Object {
                    "checked": true,
                    "text": "Telstra Purple",
                    "type": "purple",
                  },
                  Object {
                    "checked": false,
                    "text": "Managed Services",
                    "type": "support",
                  },
                ]
              }
              title=""
              twitter=""
            >
              <mapProps(SignatureContainer)
                Container={[Function]}
                email=""
                mobile=""
                name=""
                placeholders={
                  Object {
                    "email": "your.name@purple.telstra.com",
                    "mobile": "+61 111 222 333",
                    "name": "Your Name",
                    "qualifications": "Jedi Master | PSM I",
                    "title": "Job Title",
                    "twitter": "@myTwitter",
                  }
                }
                qualifications=""
                sigType={false}
                signatureTypes={
                  Array [
                    Object {
                      "checked": true,
                      "text": "Telstra Purple",
                      "type": "purple",
                    },
                    Object {
                      "checked": false,
                      "text": "Managed Services",
                      "type": "support",
                    },
                  ]
                }
                title=""
                twitter=""
              >
                <SignatureContainer
                  Container={[Function]}
                  containerProps={
                    Object {
                      "CopyRepliesAndForwardsHtml": <withState(withState(withHandlers(mapProps(Button))))
                        classAfter="button is-success"
                        classBefore="button is-primary"
                        onClickHandler={[Function]}
                        textAfter="Copied!"
                        textBefore="Copy signature"
                      />,
                      "CopyRepliesAndForwardsText": <withState(withState(withHandlers(mapProps(Button))))
                        classAfter="button is-success"
                        classBefore="button"
                        onClickHandler={[Function]}
                        textAfter="Copied!"
                        textBefore="Copy text only"
                      />,
                      "CopySignatureHtml": <withState(withState(withHandlers(mapProps(Button))))
                        classAfter="button is-success"
                        classBefore="button is-primary"
                        onClickHandler={[Function]}
                        textAfter="Copied!"
                        textBefore="Copy signature"
                      />,
                      "CopySignatureText": <withState(withState(withHandlers(mapProps(Button))))
                        classAfter="button is-success"
                        classBefore="button"
                        onClickHandler={[Function]}
                        textAfter="Copied!"
                        textBefore="Copy text only"
                      />,
                      "signatureProps": Object {
                        "email": "your.name@purple.telstra.com",
                        "isSupport": false,
                        "mobile": "+61 111 222 333",
                        "name": "Your Name",
                        "qualifications": "",
                        "title": "Job Title",
                        "twitter": "",
                      },
                    }
                  }
                >
                  <PurpleSignatureContainer
                    CopyRepliesAndForwardsHtml={
                      <withState(withState(withHandlers(mapProps(Button))))
                        classAfter="button is-success"
                        classBefore="button is-primary"
                        onClickHandler={[Function]}
                        textAfter="Copied!"
                        textBefore="Copy signature"
                      />
                    }
                    CopyRepliesAndForwardsText={
                      <withState(withState(withHandlers(mapProps(Button))))
                        classAfter="button is-success"
                        classBefore="button"
                        onClickHandler={[Function]}
                        textAfter="Copied!"
                        textBefore="Copy text only"
                      />
                    }
                    CopySignatureHtml={
                      <withState(withState(withHandlers(mapProps(Button))))
                        classAfter="button is-success"
                        classBefore="button is-primary"
                        onClickHandler={[Function]}
                        textAfter="Copied!"
                        textBefore="Copy signature"
                      />
                    }
                    CopySignatureText={
                      <withState(withState(withHandlers(mapProps(Button))))
                        classAfter="button is-success"
                        classBefore="button"
                        onClickHandler={[Function]}
                        textAfter="Copied!"
                        textBefore="Copy text only"
                      />
                    }
                    signatureProps={
                      Object {
                        "email": "your.name@purple.telstra.com",
                        "isSupport": false,
                        "mobile": "+61 111 222 333",
                        "name": "Your Name",
                        "qualifications": "",
                        "title": "Job Title",
                        "twitter": "",
                      }
                    }
                  >
                    <div
                      className="content"
                    >
                      <div
                        className="level"
                      >
                        <div
                          className="level-left"
                        >
                          <h3
                            className="level-item"
                          >
                            Standard Signature
                          </h3>
                        </div>
                        <div
                          className="level-right"
                        >
                          <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy text only"
                          >
                            <withState(withHandlers(mapProps(Button)))
                              classAfter="button is-success"
                              classBefore="button"
                              classState="button"
                              onClickHandler={[Function]}
                              setClass={[Function]}
                              textAfter="Copied!"
                              textBefore="Copy text only"
                            >
                              <withHandlers(mapProps(Button))
                                classAfter="button is-success"
                                classBefore="button"
                                classState="button"
                                onClickHandler={[Function]}
                                setClass={[Function]}
                                setText={[Function]}
                                textAfter="Copied!"
                                textBefore="Copy text only"
                                textState="Copy text only"
                              >
                                <mapProps(Button)
                                  classAfter="button is-success"
                                  classBefore="button"
                                  classState="button"
                                  onClick={[Function]}
                                  onClickHandler={[Function]}
                                  setClass={[Function]}
                                  setText={[Function]}
                                  textAfter="Copied!"
                                  textBefore="Copy text only"
                                  textState="Copy text only"
                                >
                                  <Button
                                    classState="button"
                                    onClick={[Function]}
                                    textState="Copy text only"
                                  >
                                    <button
                                      className="button"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Copy text only
                                    </button>
                                  </Button>
                                </mapProps(Button)>
                              </withHandlers(mapProps(Button))>
                            </withState(withHandlers(mapProps(Button)))>
                          </withState(withState(withHandlers(mapProps(Button))))>
                          <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button is-primary"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy signature"
                          >
                            <withState(withHandlers(mapProps(Button)))
                              classAfter="button is-success"
                              classBefore="button is-primary"
                              classState="button is-primary"
                              onClickHandler={[Function]}
                              setClass={[Function]}
                              textAfter="Copied!"
                              textBefore="Copy signature"
                            >
                              <withHandlers(mapProps(Button))
                                classAfter="button is-success"
                                classBefore="button is-primary"
                                classState="button is-primary"
                                onClickHandler={[Function]}
                                setClass={[Function]}
                                setText={[Function]}
                                textAfter="Copied!"
                                textBefore="Copy signature"
                                textState="Copy signature"
                              >
                                <mapProps(Button)
                                  classAfter="button is-success"
                                  classBefore="button is-primary"
                                  classState="button is-primary"
                                  onClick={[Function]}
                                  onClickHandler={[Function]}
                                  setClass={[Function]}
                                  setText={[Function]}
                                  textAfter="Copied!"
                                  textBefore="Copy signature"
                                  textState="Copy signature"
                                >
                                  <Button
                                    classState="button is-primary"
                                    onClick={[Function]}
                                    textState="Copy signature"
                                  >
                                    <button
                                      className="button is-primary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Copy signature
                                    </button>
                                  </Button>
                                </mapProps(Button)>
                              </withHandlers(mapProps(Button))>
                            </withState(withHandlers(mapProps(Button)))>
                          </withState(withState(withHandlers(mapProps(Button))))>
                        </div>
                      </div>
                      <Signature
                        email="your.name@purple.telstra.com"
                        isSupport={false}
                        mobile="+61 111 222 333"
                        name="Your Name"
                        qualifications=""
                        title="Job Title"
                        twitter=""
                      >
                        <div
                          className="content"
                        >
                          <table
                            border="0"
                            cellPadding="0"
                            cellSpacing="0"
                            style={
                              Object {
                                "color": "black",
                                "fontFamily": "Arial, sans-serif",
                                "fontSize": "9pt",
                              }
                            }
                            width="500px"
                          >
                            <tr>
                              <td
                                valign="top"
                              >
                                <p>
                                  <b>
                                    Your Name
                                  </b>
                                  <br />
                                  Telstra Purple
                                  <br />
                                  <span
                                    style={
                                      Object {
                                        "color": "#A5A5A5",
                                      }
                                    }
                                  >
                                    Job Title
                                  </span>
                                  <br />
                                </p>
                              </td>
                              <td
                                style={
                                  Object {
                                    "paddingRight": "20px",
                                    "width": "96px",
                                  }
                                }
                                valign="top"
                              >
                                <img
                                  alt="Telstra Purple"
                                  height="52"
                                  src="https://readifysignatures.blob.core.windows.net/images/purple-1.png"
                                  width="35"
                                />
                              </td>
                            </tr>
                            <tr>
                              <td>
                                <b>
                                  M
                                </b>
                                    
                                <a
                                  dangerouslySetInnerHTML={
                                    Object {
                                      "__html": "+61&nbsp;111&nbsp;222&nbsp;333",
                                    }
                                  }
                                  href="tel:+61111222333"
                                />
                                <br />
                                <b>
                                  E
                                </b>
                                     
                                <a
                                  href="mailto:your.name@purple.telstra.com"
                                >
                                  your.name@purple.telstra.com
                                </a>
                                <br />
                                <b>
                                  W
                                </b>
                                     
                                <a
                                  href="www.telstra.com/purple"
                                >
                                  telstra.com
                                </a>
                                <br />
                              </td>
                            </tr>
                            <tr>
                              <td
                                style={
                                  Object {
                                    "color": "black",
                                    "fontFamily": "Arial, sans-serif",
                                    "fontSize": "6.5pt",
                                  }
                                }
                              >
                                This email may contain confidential information.
                                <br />
                                If I've sent it to you by accident, please delete it immediately
                              </td>
                            </tr>
                          </table>
                        </div>
                      </Signature>
                      <div
                        className="level"
                      >
                        <div
                          className="level-left"
                        >
                          <h3
                            className="level-item"
                          >
                            Replies and Forwards Signature
                          </h3>
                        </div>
                        <div
                          className="level-right"
                        >
                          <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy text only"
                          >
                            <withState(withHandlers(mapProps(Button)))
                              classAfter="button is-success"
                              classBefore="button"
                              classState="button"
                              onClickHandler={[Function]}
                              setClass={[Function]}
                              textAfter="Copied!"
                              textBefore="Copy text only"
                            >
                              <withHandlers(mapProps(Button))
                                classAfter="button is-success"
                                classBefore="button"
                                classState="button"
                                onClickHandler={[Function]}
                                setClass={[Function]}
                                setText={[Function]}
                                textAfter="Copied!"
                                textBefore="Copy text only"
                                textState="Copy text only"
                              >
                                <mapProps(Button)
                                  classAfter="button is-success"
                                  classBefore="button"
                                  classState="button"
                                  onClick={[Function]}
                                  onClickHandler={[Function]}
                                  setClass={[Function]}
                                  setText={[Function]}
                                  textAfter="Copied!"
                                  textBefore="Copy text only"
                                  textState="Copy text only"
                                >
                                  <Button
                                    classState="button"
                                    onClick={[Function]}
                                    textState="Copy text only"
                                  >
                                    <button
                                      className="button"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Copy text only
                                    </button>
                                  </Button>
                                </mapProps(Button)>
                              </withHandlers(mapProps(Button))>
                            </withState(withHandlers(mapProps(Button)))>
                          </withState(withState(withHandlers(mapProps(Button))))>
                          <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button is-primary"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy signature"
                          >
                            <withState(withHandlers(mapProps(Button)))
                              classAfter="button is-success"
                              classBefore="button is-primary"
                              classState="button is-primary"
                              onClickHandler={[Function]}
                              setClass={[Function]}
                              textAfter="Copied!"
                              textBefore="Copy signature"
                            >
                              <withHandlers(mapProps(Button))
                                classAfter="button is-success"
                                classBefore="button is-primary"
                                classState="button is-primary"
                                onClickHandler={[Function]}
                                setClass={[Function]}
                                setText={[Function]}
                                textAfter="Copied!"
                                textBefore="Copy signature"
                                textState="Copy signature"
                              >
                                <mapProps(Button)
                                  classAfter="button is-success"
                                  classBefore="button is-primary"
                                  classState="button is-primary"
                                  onClick={[Function]}
                                  onClickHandler={[Function]}
                                  setClass={[Function]}
                                  setText={[Function]}
                                  textAfter="Copied!"
                                  textBefore="Copy signature"
                                  textState="Copy signature"
                                >
                                  <Button
                                    classState="button is-primary"
                                    onClick={[Function]}
                                    textState="Copy signature"
                                  >
                                    <button
                                      className="button is-primary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Copy signature
                                    </button>
                                  </Button>
                                </mapProps(Button)>
                              </withHandlers(mapProps(Button))>
                            </withState(withHandlers(mapProps(Button)))>
                          </withState(withState(withHandlers(mapProps(Button))))>
                        </div>
                      </div>
                      <RepliesAndForwards
                        email="your.name@purple.telstra.com"
                        isSupport={false}
                        mobile="+61 111 222 333"
                        name="Your Name"
                        qualifications=""
                        title="Job Title"
                        twitter=""
                      >
                        <div>
                          <p
                            style={
                              Object {
                                "color": "black",
                                "fontFamily": "Arial, sans-serif",
                                "fontSize": "10.5pt",
                              }
                            }
                          >
                            --
                            <br />
                            <b>
                              Your Name
                               | 
                              Telstra Purple
                               
                              Job Title
                            </b>
                            <br />
                            <b>
                              M
                            </b>
                              
                            <a
                              dangerouslySetInnerHTML={
                                Object {
                                  "__html": "+61&nbsp;111&nbsp;222&nbsp;333",
                                }
                              }
                              href="tel:+61111222333"
                            />
                             | 
                            <b>
                              E
                            </b>
                              
                            <a
                              href="mailto:your.name@purple.telstra.com"
                            >
                              your.name@purple.telstra.com
                            </a>
                             | 
                            <b>
                              W
                            </b>
                              
                            <a
                              href="www.telstra.com/purple"
                            >
                              telstra.com
                            </a>
                          </p>
                        </div>
                      </RepliesAndForwards>
                    </div>
                  </PurpleSignatureContainer>
                </SignatureContainer>
              </mapProps(SignatureContainer)>
            </withProps(mapProps(SignatureContainer))>
          </form>
        </Form>
      </div>
    </section>
  </div>
</App>
`;

exports[`Renders Purple Signature 2`] = `
Array [
  "Warning: validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s",
  "<tr>",
  "table",
]
`;

exports[`Renders Purple support 1`] = `
<App>
  <div>
    <Header
      brandInfo={
        Object {
          "appName": "Telstra Purple Outlook Signature",
          "brandLink": "https://readify-signatures.azurewebsites.net/",
        }
      }
    >
      <nav
        aria-label="main navigation"
        className="navbar"
        role="navigation"
      >
        <div
          className="section"
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <div
            className="container"
          >
            <div
              className="navbar-brand"
            >
              <a
                className="navbar-item"
                href="https://readify-signatures.azurewebsites.net/"
              >
                Telstra Purple Outlook Signature
              </a>
            </div>
          </div>
          <div
            className="column"
          />
        </div>
      </nav>
    </Header>
    <section
      className="section"
    >
      <div
        className="container"
      >
        <Info>
          <div
            className="content"
          >
            <h3
              className="title"
            >
              Create your signature
            </h3>
            <ol>
              <li>
                Enter your details.
              </li>
              <li>
                Click the "Copy Signature" button
              </li>
              <li>
                Open outlook
              </li>
              <li>
                <a
                  href="https://support.office.com/en-us/article/create-and-add-a-signature-to-messages-8ee5d4f4-68fd-464a-a1c1-0e1c80bb27f2"
                  rel="noopener noreferrer"
                  style={
                    Object {
                      "fontWeight": "bold",
                      "textDecoration": "underline",
                    }
                  }
                  target="_blank"
                >
                  Paste selection into signature editor
                </a>
                <ul
                  style={
                    Object {
                      "listStyleType": "none",
                      "margin": "0",
                      "paddingLeft": "1rem",
                      "paddingTop": "0.5rem",
                    }
                  }
                >
                  <li
                    style={
                      Object {
                        "marginBottom": "0.5rem",
                      }
                    }
                  >
                    <span
                      style={
                        Object {
                          "fontWeight": "bold",
                        }
                      }
                    >
                      Windows: 
                    </span>
                    File &gt; Options &gt; Mail &gt; Signatures
                  </li>
                  <li>
                    <span
                      style={
                        Object {
                          "fontWeight": "bold",
                        }
                      }
                    >
                      Mac: 
                    </span>
                    Outlook &gt; Preferences &gt; Signatures
                  </li>
                  <li>
                    <span
                      style={
                        Object {
                          "fontWeight": "bold",
                        }
                      }
                    >
                      Outlook web access (OWA): 
                    </span>
                    Cog (top-right) &gt; Options &gt; Mail &gt; Layout &gt; Email signature
                  </li>
                </ul>
              </li>
            </ol>
            <br />
          </div>
        </Info>
        <Form>
          <form>
            <div
              className="field is-horizontal"
              key="signatureTypes"
            >
              <div
                className="field-label is-normal"
              >
                <label
                  className="label field-label"
                >
                  Signature Type
                </label>
              </div>
              <div
                className="field-body"
              >
                <div
                  className="control"
                  key="signatureTypes"
                >
                  <div
                    className="field is-narrow"
                  >
                    <div
                      className="control"
                    >
                      <label
                        className="radio"
                        key="0"
                      >
                        <input
                          checked={false}
                          className="radioInput"
                          id="telstraPurple"
                          name="signatureTypeOpt"
                          onChange={[Function]}
                          type="radio"
                        />
                        Telstra Purple
                      </label>
                      <label
                        className="radio"
                        key="1"
                      >
                        <input
                          checked={true}
                          className="radioInput"
                          id="managedServices"
                          name="signatureTypeOpt"
                          onChange={[Function]}
                          type="radio"
                        />
                        Managed Services
                      </label>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              className="field is-horizontal"
              key="name"
            >
              <div
                className="field-label is-normal"
              >
                <label
                  className="label field-label"
                >
                  Your Name:
                </label>
              </div>
              <div
                className="field-body"
              >
                <div
                  className="control"
                  key="name"
                >
                  <input
                    className="input"
                    onChange={[Function]}
                    placeholder="Your Name"
                    style={
                      Object {
                        "width": "300px",
                      }
                    }
                    value=""
                  />
                </div>
              </div>
            </div>
            <div
              className="field is-horizontal"
              key="title"
            >
              <div
                className="field-label is-normal"
              >
                <label
                  className="label field-label"
                >
                  Job Title:
                </label>
              </div>
              <div
                className="field-body"
              >
                <div
                  className="control"
                  key="title"
                >
                  <input
                    className="input"
                    onChange={[Function]}
                    placeholder="Job Title"
                    style={
                      Object {
                        "width": "300px",
                      }
                    }
                    value=""
                  />
                </div>
              </div>
            </div>
            <div
              className="field is-horizontal"
              key="qualifications"
            >
              <div
                className="field-label is-normal"
              >
                <label
                  className="label field-label"
                >
                  Qualifications: (Optional)
                </label>
              </div>
              <div
                className="field-body"
              >
                <div
                  className="control"
                  key="qualifications"
                >
                  <input
                    className="input"
                    onChange={[Function]}
                    placeholder="Jedi Master | PSM I"
                    style={
                      Object {
                        "width": "300px",
                      }
                    }
                    value=""
                  />
                </div>
              </div>
            </div>
            <div
              className="field is-horizontal"
              key="mobile"
            >
              <div
                className="field-label is-normal"
              >
                <label
                  className="label field-label"
                >
                  Mobile:
                </label>
              </div>
              <div
                className="field-body"
              >
                <div
                  className="control"
                  key="mobile"
                >
                  <input
                    className="input"
                    onChange={[Function]}
                    placeholder="+61 111 222 333"
                    style={
                      Object {
                        "width": "300px",
                      }
                    }
                    value=""
                  />
                </div>
              </div>
            </div>
            <div
              className="field is-horizontal"
              key="email"
            >
              <div
                className="field-label is-normal"
              >
                <label
                  className="label field-label"
                >
                  Email:
                </label>
              </div>
              <div
                className="field-body"
              >
                <div
                  className="control"
                  key="email"
                >
                  <input
                    className="input"
                    onChange={[Function]}
                    placeholder="your.name@purple.telstra.com"
                    style={
                      Object {
                        "width": "300px",
                      }
                    }
                    value=""
                  />
                </div>
              </div>
            </div>
            <div
              className="field is-horizontal"
              key="twitter"
            >
              <div
                className="field-label is-normal"
              >
                <label
                  className="label field-label"
                >
                  Twitter: (Optional)
                </label>
              </div>
              <div
                className="field-body"
              >
                <div
                  className="control"
                  key="twitter"
                >
                  <input
                    className="input"
                    onChange={[Function]}
                    placeholder="@myTwitter"
                    style={
                      Object {
                        "width": "300px",
                      }
                    }
                    value=""
                  />
                </div>
              </div>
            </div>
            <hr />
            <withProps(mapProps(SignatureContainer))
              email=""
              mobile=""
              name=""
              placeholders={
                Object {
                  "email": "your.name@purple.telstra.com",
                  "mobile": "+61 111 222 333",
                  "name": "Your Name",
                  "qualifications": "Jedi Master | PSM I",
                  "title": "Job Title",
                  "twitter": "@myTwitter",
                }
              }
              qualifications=""
              sigType="support"
              signatureTypes={
                Array [
                  Object {
                    "checked": false,
                    "text": "Telstra Purple",
                    "type": "purple",
                  },
                  Object {
                    "checked": true,
                    "text": "Managed Services",
                    "type": "support",
                  },
                ]
              }
              title=""
              twitter=""
            >
              <mapProps(SignatureContainer)
                Container={[Function]}
                email=""
                mobile=""
                name=""
                placeholders={
                  Object {
                    "email": "your.name@purple.telstra.com",
                    "mobile": "+61 111 222 333",
                    "name": "Your Name",
                    "qualifications": "Jedi Master | PSM I",
                    "title": "Job Title",
                    "twitter": "@myTwitter",
                  }
                }
                qualifications=""
                sigType="support"
                signatureTypes={
                  Array [
                    Object {
                      "checked": false,
                      "text": "Telstra Purple",
                      "type": "purple",
                    },
                    Object {
                      "checked": true,
                      "text": "Managed Services",
                      "type": "support",
                    },
                  ]
                }
                title=""
                twitter=""
              >
                <SignatureContainer
                  Container={[Function]}
                  containerProps={
                    Object {
                      "CopyRepliesAndForwardsHtml": <withState(withState(withHandlers(mapProps(Button))))
                        classAfter="button is-success"
                        classBefore="button is-primary"
                        onClickHandler={[Function]}
                        textAfter="Copied!"
                        textBefore="Copy signature"
                      />,
                      "CopyRepliesAndForwardsText": <withState(withState(withHandlers(mapProps(Button))))
                        classAfter="button is-success"
                        classBefore="button"
                        onClickHandler={[Function]}
                        textAfter="Copied!"
                        textBefore="Copy text only"
                      />,
                      "CopySignatureHtml": <withState(withState(withHandlers(mapProps(Button))))
                        classAfter="button is-success"
                        classBefore="button is-primary"
                        onClickHandler={[Function]}
                        textAfter="Copied!"
                        textBefore="Copy signature"
                      />,
                      "CopySignatureText": <withState(withState(withHandlers(mapProps(Button))))
                        classAfter="button is-success"
                        classBefore="button"
                        onClickHandler={[Function]}
                        textAfter="Copied!"
                        textBefore="Copy text only"
                      />,
                      "signatureProps": Object {
                        "email": "your.name@purple.telstra.com",
                        "isSupport": true,
                        "mobile": "+61 111 222 333",
                        "name": "Your Name",
                        "qualifications": "",
                        "title": "Job Title",
                        "twitter": "",
                      },
                    }
                  }
                >
                  <PurpleSignatureContainer
                    CopyRepliesAndForwardsHtml={
                      <withState(withState(withHandlers(mapProps(Button))))
                        classAfter="button is-success"
                        classBefore="button is-primary"
                        onClickHandler={[Function]}
                        textAfter="Copied!"
                        textBefore="Copy signature"
                      />
                    }
                    CopyRepliesAndForwardsText={
                      <withState(withState(withHandlers(mapProps(Button))))
                        classAfter="button is-success"
                        classBefore="button"
                        onClickHandler={[Function]}
                        textAfter="Copied!"
                        textBefore="Copy text only"
                      />
                    }
                    CopySignatureHtml={
                      <withState(withState(withHandlers(mapProps(Button))))
                        classAfter="button is-success"
                        classBefore="button is-primary"
                        onClickHandler={[Function]}
                        textAfter="Copied!"
                        textBefore="Copy signature"
                      />
                    }
                    CopySignatureText={
                      <withState(withState(withHandlers(mapProps(Button))))
                        classAfter="button is-success"
                        classBefore="button"
                        onClickHandler={[Function]}
                        textAfter="Copied!"
                        textBefore="Copy text only"
                      />
                    }
                    signatureProps={
                      Object {
                        "email": "your.name@purple.telstra.com",
                        "isSupport": true,
                        "mobile": "+61 111 222 333",
                        "name": "Your Name",
                        "qualifications": "",
                        "title": "Job Title",
                        "twitter": "",
                      }
                    }
                  >
                    <div
                      className="content"
                    >
                      <div
                        className="level"
                      >
                        <div
                          className="level-left"
                        >
                          <h3
                            className="level-item"
                          >
                            Standard Signature
                          </h3>
                        </div>
                        <div
                          className="level-right"
                        >
                          <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy text only"
                          >
                            <withState(withHandlers(mapProps(Button)))
                              classAfter="button is-success"
                              classBefore="button"
                              classState="button"
                              onClickHandler={[Function]}
                              setClass={[Function]}
                              textAfter="Copied!"
                              textBefore="Copy text only"
                            >
                              <withHandlers(mapProps(Button))
                                classAfter="button is-success"
                                classBefore="button"
                                classState="button"
                                onClickHandler={[Function]}
                                setClass={[Function]}
                                setText={[Function]}
                                textAfter="Copied!"
                                textBefore="Copy text only"
                                textState="Copy text only"
                              >
                                <mapProps(Button)
                                  classAfter="button is-success"
                                  classBefore="button"
                                  classState="button"
                                  onClick={[Function]}
                                  onClickHandler={[Function]}
                                  setClass={[Function]}
                                  setText={[Function]}
                                  textAfter="Copied!"
                                  textBefore="Copy text only"
                                  textState="Copy text only"
                                >
                                  <Button
                                    classState="button"
                                    onClick={[Function]}
                                    textState="Copy text only"
                                  >
                                    <button
                                      className="button"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Copy text only
                                    </button>
                                  </Button>
                                </mapProps(Button)>
                              </withHandlers(mapProps(Button))>
                            </withState(withHandlers(mapProps(Button)))>
                          </withState(withState(withHandlers(mapProps(Button))))>
                          <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button is-primary"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy signature"
                          >
                            <withState(withHandlers(mapProps(Button)))
                              classAfter="button is-success"
                              classBefore="button is-primary"
                              classState="button is-primary"
                              onClickHandler={[Function]}
                              setClass={[Function]}
                              textAfter="Copied!"
                              textBefore="Copy signature"
                            >
                              <withHandlers(mapProps(Button))
                                classAfter="button is-success"
                                classBefore="button is-primary"
                                classState="button is-primary"
                                onClickHandler={[Function]}
                                setClass={[Function]}
                                setText={[Function]}
                                textAfter="Copied!"
                                textBefore="Copy signature"
                                textState="Copy signature"
                              >
                                <mapProps(Button)
                                  classAfter="button is-success"
                                  classBefore="button is-primary"
                                  classState="button is-primary"
                                  onClick={[Function]}
                                  onClickHandler={[Function]}
                                  setClass={[Function]}
                                  setText={[Function]}
                                  textAfter="Copied!"
                                  textBefore="Copy signature"
                                  textState="Copy signature"
                                >
                                  <Button
                                    classState="button is-primary"
                                    onClick={[Function]}
                                    textState="Copy signature"
                                  >
                                    <button
                                      className="button is-primary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Copy signature
                                    </button>
                                  </Button>
                                </mapProps(Button)>
                              </withHandlers(mapProps(Button))>
                            </withState(withHandlers(mapProps(Button)))>
                          </withState(withState(withHandlers(mapProps(Button))))>
                        </div>
                      </div>
                      <Signature
                        email="your.name@purple.telstra.com"
                        isSupport={true}
                        mobile="+61 111 222 333"
                        name="Your Name"
                        qualifications=""
                        title="Job Title"
                        twitter=""
                      >
                        <div
                          className="content"
                        >
                          <table
                            border="0"
                            cellPadding="0"
                            cellSpacing="0"
                            style={
                              Object {
                                "color": "black",
                                "fontFamily": "Arial, sans-serif",
                                "fontSize": "9pt",
                              }
                            }
                            width="500px"
                          >
                            <tr>
                              <td
                                valign="top"
                              >
                                <p>
                                  <b>
                                    Your Name
                                  </b>
                                  <br />
                                  Telstra Purple
                                  <br />
                                  <span
                                    style={
                                      Object {
                                        "color": "#A5A5A5",
                                      }
                                    }
                                  >
                                    Job Title
                                  </span>
                                  <br />
                                </p>
                              </td>
                              <td
                                style={
                                  Object {
                                    "paddingRight": "20px",
                                    "width": "96px",
                                  }
                                }
                                valign="top"
                              >
                                <img
                                  alt="Telstra Purple"
                                  height="52"
                                  src="https://readifysignatures.blob.core.windows.net/images/purple-1.png"
                                  width="35"
                                />
                              </td>
                            </tr>
                            <tr>
                              <td>
                                <b>
                                  M
                                </b>
                                    
                                <a
                                  dangerouslySetInnerHTML={
                                    Object {
                                      "__html": "+61&nbsp;111&nbsp;222&nbsp;333",
                                    }
                                  }
                                  href="tel:+61111222333"
                                />
                                <br />
                                <b>
                                  E
                                </b>
                                     
                                <a
                                  href="mailto:your.name@purple.telstra.com"
                                >
                                  your.name@purple.telstra.com
                                </a>
                                <br />
                                <b>
                                  W
                                </b>
                                     
                                <a
                                  href="www.telstra.com/purple"
                                >
                                  telstra.com
                                </a>
                                <br />
                              </td>
                            </tr>
                            <tr>
                              <td
                                style={
                                  Object {
                                    "color": "black",
                                    "fontFamily": "Arial, sans-serif",
                                    "fontSize": "6.5pt",
                                  }
                                }
                              >
                                <span>
                                  <b>
                                    Support Hotline
                                  </b>
                                  <span
                                    dangerouslySetInnerHTML={
                                      Object {
                                        "__html": "&nbsp;1800&nbsp;READIFY",
                                      }
                                    }
                                  />
                                </span>
                                <span>
                                  | 
                                  <b>
                                    Support Email
                                  </b>
                                   
                                  <a
                                    href="mailto:support@readify.net"
                                  >
                                    support@readify.net
                                  </a>
                                  <br />
                                </span>
                                This email may contain confidential information.
                                <br />
                                If I've sent it to you by accident, please delete it immediately
                              </td>
                            </tr>
                          </table>
                        </div>
                      </Signature>
                      <div
                        className="level"
                      >
                        <div
                          className="level-left"
                        >
                          <h3
                            className="level-item"
                          >
                            Replies and Forwards Signature
                          </h3>
                        </div>
                        <div
                          className="level-right"
                        >
                          <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy text only"
                          >
                            <withState(withHandlers(mapProps(Button)))
                              classAfter="button is-success"
                              classBefore="button"
                              classState="button"
                              onClickHandler={[Function]}
                              setClass={[Function]}
                              textAfter="Copied!"
                              textBefore="Copy text only"
                            >
                              <withHandlers(mapProps(Button))
                                classAfter="button is-success"
                                classBefore="button"
                                classState="button"
                                onClickHandler={[Function]}
                                setClass={[Function]}
                                setText={[Function]}
                                textAfter="Copied!"
                                textBefore="Copy text only"
                                textState="Copy text only"
                              >
                                <mapProps(Button)
                                  classAfter="button is-success"
                                  classBefore="button"
                                  classState="button"
                                  onClick={[Function]}
                                  onClickHandler={[Function]}
                                  setClass={[Function]}
                                  setText={[Function]}
                                  textAfter="Copied!"
                                  textBefore="Copy text only"
                                  textState="Copy text only"
                                >
                                  <Button
                                    classState="button"
                                    onClick={[Function]}
                                    textState="Copy text only"
                                  >
                                    <button
                                      className="button"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Copy text only
                                    </button>
                                  </Button>
                                </mapProps(Button)>
                              </withHandlers(mapProps(Button))>
                            </withState(withHandlers(mapProps(Button)))>
                          </withState(withState(withHandlers(mapProps(Button))))>
                          <withState(withState(withHandlers(mapProps(Button))))
                            classAfter="button is-success"
                            classBefore="button is-primary"
                            onClickHandler={[Function]}
                            textAfter="Copied!"
                            textBefore="Copy signature"
                          >
                            <withState(withHandlers(mapProps(Button)))
                              classAfter="button is-success"
                              classBefore="button is-primary"
                              classState="button is-primary"
                              onClickHandler={[Function]}
                              setClass={[Function]}
                              textAfter="Copied!"
                              textBefore="Copy signature"
                            >
                              <withHandlers(mapProps(Button))
                                classAfter="button is-success"
                                classBefore="button is-primary"
                                classState="button is-primary"
                                onClickHandler={[Function]}
                                setClass={[Function]}
                                setText={[Function]}
                                textAfter="Copied!"
                                textBefore="Copy signature"
                                textState="Copy signature"
                              >
                                <mapProps(Button)
                                  classAfter="button is-success"
                                  classBefore="button is-primary"
                                  classState="button is-primary"
                                  onClick={[Function]}
                                  onClickHandler={[Function]}
                                  setClass={[Function]}
                                  setText={[Function]}
                                  textAfter="Copied!"
                                  textBefore="Copy signature"
                                  textState="Copy signature"
                                >
                                  <Button
                                    classState="button is-primary"
                                    onClick={[Function]}
                                    textState="Copy signature"
                                  >
                                    <button
                                      className="button is-primary"
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Copy signature
                                    </button>
                                  </Button>
                                </mapProps(Button)>
                              </withHandlers(mapProps(Button))>
                            </withState(withHandlers(mapProps(Button)))>
                          </withState(withState(withHandlers(mapProps(Button))))>
                        </div>
                      </div>
                      <RepliesAndForwards
                        email="your.name@purple.telstra.com"
                        isSupport={true}
                        mobile="+61 111 222 333"
                        name="Your Name"
                        qualifications=""
                        title="Job Title"
                        twitter=""
                      >
                        <div>
                          <p
                            style={
                              Object {
                                "color": "black",
                                "fontFamily": "Arial, sans-serif",
                                "fontSize": "10.5pt",
                              }
                            }
                          >
                            --
                            <br />
                            <b>
                              Your Name
                               | 
                              Telstra Purple
                               
                              Job Title
                            </b>
                            <br />
                            <b>
                              M
                            </b>
                              
                            <a
                              dangerouslySetInnerHTML={
                                Object {
                                  "__html": "+61&nbsp;111&nbsp;222&nbsp;333",
                                }
                              }
                              href="tel:+61111222333"
                            />
                             | 
                            <b>
                              E
                            </b>
                              
                            <a
                              href="mailto:your.name@purple.telstra.com"
                            >
                              your.name@purple.telstra.com
                            </a>
                             | 
                            <b>
                              W
                            </b>
                              
                            <a
                              href="www.telstra.com/purple"
                            >
                              telstra.com
                            </a>
                            <span>
                              <br />
                              <b>
                                Support Hotline
                              </b>
                               
                              <span
                                dangerouslySetInnerHTML={
                                  Object {
                                    "__html": "&nbsp;1800&nbsp;READIFY",
                                  }
                                }
                              />
                               | 
                              <b>
                                Support Email
                              </b>
                               
                              support@readify.net
                            </span>
                          </p>
                        </div>
                      </RepliesAndForwards>
                    </div>
                  </PurpleSignatureContainer>
                </SignatureContainer>
              </mapProps(SignatureContainer)>
            </withProps(mapProps(SignatureContainer))>
          </form>
        </Form>
      </div>
    </section>
  </div>
</App>
`;

exports[`Renders Purple support 2`] = `""`;
